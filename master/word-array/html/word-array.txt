-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Treat integral types as arrays of smaller integral types
@package word-array
@version 1.1.0.0

module Data.Word64Array.Word8

-- | A vector of 8 <a>Word8</a>s packed into a <a>Word64</a>.
newtype WordArray
WordArray :: Word64 -> WordArray
[fromWordArray] :: WordArray -> Word64
newtype Index
Index :: Int -> Index
[getIndex] :: Index -> Int
toWordArray :: Word64 -> WordArray
readArray :: WordArray -> Index -> Element WordArray
writeArray :: WordArray -> Index -> Element WordArray -> WordArray

-- | Modify the word at a given index.
overIndex :: Index -> (Element WordArray -> Element WordArray) -> WordArray -> WordArray
iforWordArray :: Applicative f => WordArray -> (Int -> Element WordArray -> f ()) -> f ()
ifoldWordArray :: (Int -> Element WordArray -> b -> b) -> b -> WordArray -> b
toList :: WordArray -> [Element WordArray]
toTuple :: WordArray -> (# Element WordArray, Element WordArray, Element WordArray, Element WordArray, Element WordArray, Element WordArray, Element WordArray, Element WordArray #)
displayWordArray :: WordArray -> String
instance Control.DeepSeq.NFData Data.Word64Array.Word8.WordArray
instance GHC.Classes.Ord Data.Word64Array.Word8.WordArray
instance GHC.Classes.Eq Data.Word64Array.Word8.WordArray
instance GHC.Num.Num Data.Word64Array.Word8.Index
instance GHC.Classes.Ord Data.Word64Array.Word8.Index
instance GHC.Classes.Eq Data.Word64Array.Word8.Index
instance GHC.Show.Show Data.Word64Array.Word8.Index
instance GHC.Enum.Bounded Data.Word64Array.Word8.Index
instance GHC.Show.Show Data.Word64Array.Word8.WordArray
instance Data.MonoTraversable.MonoFunctor Data.Word64Array.Word8.WordArray
instance Data.MonoTraversable.MonoFoldable Data.Word64Array.Word8.WordArray
